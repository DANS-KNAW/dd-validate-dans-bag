{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dd-validate-dans-bag \u00b6 Validates whether a given bag complies with the DANS BagIt Profile v1 Purpose \u00b6 This module checks whether a given BagIt bag complies with the DANS BagIt Profile v1 . Interfaces \u00b6 This service has the following interfaces: Provided interfaces \u00b6 API \u00b6 Protocol type : HTTP Internal or external : internal Purpose : to receive commands to validate DANS bags and return the results of the validation Deposit directories \u00b6 Protocol type : Shared filesystem Internal or external : internal Purpose : to receive bags to be validated Processing \u00b6 The API accepts requests to validate a bag located in a deposit directory. The bag is validated against the DANS BagIt Profile v1. The results of the validation are returned in the API response. Note, that this means the processing is synchronous. For large bags this may take a considerable amount of time. It is also possible to send the bag itself as a ZIP file in a POST request to the API. This is intended as a service for client developers, so that they can verify whether the bags they create comply with the DANS BagIt Profile v1. This interface is not exposed in the production environment. For details about the API, see the API documentation .","title":"Description"},{"location":"#dd-validate-dans-bag","text":"Validates whether a given bag complies with the DANS BagIt Profile v1","title":"dd-validate-dans-bag"},{"location":"#purpose","text":"This module checks whether a given BagIt bag complies with the DANS BagIt Profile v1 .","title":"Purpose"},{"location":"#interfaces","text":"This service has the following interfaces:","title":"Interfaces"},{"location":"#provided-interfaces","text":"","title":"Provided interfaces"},{"location":"#api","text":"Protocol type : HTTP Internal or external : internal Purpose : to receive commands to validate DANS bags and return the results of the validation","title":"API"},{"location":"#deposit-directories","text":"Protocol type : Shared filesystem Internal or external : internal Purpose : to receive bags to be validated","title":"Deposit directories"},{"location":"#processing","text":"The API accepts requests to validate a bag located in a deposit directory. The bag is validated against the DANS BagIt Profile v1. The results of the validation are returned in the API response. Note, that this means the processing is synchronous. For large bags this may take a considerable amount of time. It is also possible to send the bag itself as a ZIP file in a POST request to the API. This is intended as a service for client developers, so that they can verify whether the bags they create comply with the DANS BagIt Profile v1. This interface is not exposed in the production environment. For details about the API, see the API documentation .","title":"Processing"},{"location":"config/","text":"Configuration \u00b6 This module can be configured by editing the configuration file. This file is installed in /etc/opt/dans.knaw.nl/dd-validate-dans-bag/config.yml when using the RPM. The settings are explained with comments in the file itself. An on-line version of the latest configuration file can be found here .","title":"Configuration"},{"location":"config/#configuration","text":"This module can be configured by editing the configuration file. This file is installed in /etc/opt/dans.knaw.nl/dd-validate-dans-bag/config.yml when using the RPM. The settings are explained with comments in the file itself. An on-line version of the latest configuration file can be found here .","title":"Configuration"},{"location":"context/","text":"Context \u00b6 This module is a component in the DANS Data Station Architecture .","title":"Context"},{"location":"context/#context","text":"This module is a component in the DANS Data Station Architecture .","title":"Context"},{"location":"dev/","text":"Development \u00b6 General information about developing DANS modules can be found here .","title":"Overview"},{"location":"dev/#development","text":"General information about developing DANS modules can be found here .","title":"Development"},{"location":"installation/","text":"Installation \u00b6 Currently, this project is built as an RPM package for RHEL8 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-validate-dans-bag and the configuration files to /etc/opt/dans.knaw.nl/dd-validate-dans-bag . For installation on systems that do no support RPM and/or systemd: Build the tarball (see next section). Extract it to some location on your system, for example /opt/dans.knaw.nl/dd-validate-dans-bag . Start the service with the following command /opt/dans.knaw.nl/dd-validate-dans-bag/bin/dd-validate-dans-bag server /opt/dans.knaw.nl/dd-validate-dans-bag/cfg/config.yml Building from source \u00b6 Prerequisites: Java 17 or higher Maven 3.3.3 or higher RPM (optional, only if you want to build the RPM package) Steps: git clone https://github.com/DANS-KNAW/dd-validate-dans-bag.git cd dd-validate-dans-bag mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"Installation"},{"location":"installation/#installation","text":"Currently, this project is built as an RPM package for RHEL8 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-validate-dans-bag and the configuration files to /etc/opt/dans.knaw.nl/dd-validate-dans-bag . For installation on systems that do no support RPM and/or systemd: Build the tarball (see next section). Extract it to some location on your system, for example /opt/dans.knaw.nl/dd-validate-dans-bag . Start the service with the following command /opt/dans.knaw.nl/dd-validate-dans-bag/bin/dd-validate-dans-bag server /opt/dans.knaw.nl/dd-validate-dans-bag/cfg/config.yml","title":"Installation"},{"location":"installation/#building-from-source","text":"Prerequisites: Java 17 or higher Maven 3.3.3 or higher RPM (optional, only if you want to build the RPM package) Steps: git clone https://github.com/DANS-KNAW/dd-validate-dans-bag.git cd dd-validate-dans-bag mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"Building from source"},{"location":"to-api/","text":"The API is defined in dd-validate-dans-bag-api . The version implemented by this service can be viewed in Swagger UI in a new tab: API .","title":"API"}]}